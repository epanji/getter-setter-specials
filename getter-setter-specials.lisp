;;;; getter-setter-specials.lisp

(in-package #:getter-setter-specials)

(defmacro %define-variable (variable-name)
  `(defparameter ,variable-name nil
     "A variable generated by GETTER-SETTER-SPECIALS package."))

(defmacro %define-getter-setter (function-name variable-name)
  `(defun ,function-name (&optional value)
     ,(format nil "Special getter and setter for variable ~A.
If VALUE is NIL, it will get the variable value.
Otherwise, that means setting variable to VALUE.
To set variable to NIL use keyword :NIL for VALUE." variable-name)
     (if (null value) ,variable-name
         (setf ,variable-name (unless (eql :nil value) value)))))

(defmacro define-specials (&body names)
  "A macro for creating VARIABLES including getter and setter FUNCTIONS."
  (loop for name in names
        for special = (intern (format nil "*~A*" (string name)))
        collect `(%define-variable ,special) into specials
        collect `(%define-getter-setter ,name ,special) into accessors
        finally (return `(progn ,@specials ,@accessors (or)))))
